<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:WPFControl">

    <control:BoolToInvertedBoolConverter x:Key="BoolToInvertedBoolConverter" />
    <control:ButtonImages x:Key="ButtonImages"/>

    <Style TargetType="ToggleButton" x:Key="ArrowComboToggleButton">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent">
                        <Path Name="Arrow" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 8 0 L 4 4 Z" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="AddComboToggleButton">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent">
                        <Image Source="{Binding AddLocation, Source={StaticResource ButtonImages}}" HorizontalAlignment="Right"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.60"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type control:AutoCompleteComboBox}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:AutoCompleteComboBox}">
                    <Grid>
                        <control:PreviewTextBox x:Name="PART_EditableTextBox"/>
                        <ToggleButton Name="PART_AddToggleButton" Visibility="Collapsed" Style="{StaticResource AddComboToggleButton}" Margin="0,0,15,0" Cursor="Hand" IsEnabled="False"/>
                        <ToggleButton Name="PART_ToggleButton" Style="{StaticResource ArrowComboToggleButton}" IsEnabled="{Binding IsOpen, ElementName=PART_Popup, Converter={StaticResource BoolToInvertedBoolConverter}}"/>
                        <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" PopupAnimation="Slide" IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton, Mode=TwoWay}" >
                            <Grid>
                                <StackPanel Orientation="Vertical">
                                    <ListBox Name="PART_ListBox" MaxHeight="250">
                                    </ListBox>
                                    <Border Name="PART_SortBorder" BorderThickness="1" BorderBrush="Gray" Background="#EDEDED">
                                        <CheckBox Name="PART_SortCheckBox" Content="Sort by name" Margin="2" />
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
